services:
  postgres:
    image: postgres:16-alpine
    container_name: mokuro-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mokuro_enhanced
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mokuro-network

  redis:
    image: redis:7-alpine
    container_name: mokuro-redis
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mokuro-network

  worker:
    build:
      context: ./packages/worker
      dockerfile: Dockerfile
    container_name: mokuro-worker
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      TEMP_DIR: /data/temp
      BACKEND_URL: http://host.docker.internal:3000
      MOKURO_MODEL: kha-white/manga-ocr-base
      FORCE_CPU: "false"
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: compute,utility
    volumes:
      # Worker only needs its own temp directory for processing
      - worker_temp:/data/temp
    depends_on:
      - redis
    networks:
      - mokuro-network
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

volumes:
  postgres_data:
  worker_temp:

networks:
  mokuro-network:
    driver: bridge